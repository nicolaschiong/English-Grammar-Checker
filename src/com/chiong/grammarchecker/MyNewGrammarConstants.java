/* Generated By:JavaCC: Do not edit this line. MyNewGrammarConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MyNewGrammarConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int WORD = 5;
  /** RegularExpression Id. */
  int NUM = 6;
  /** RegularExpression Id. */
  int CONSTANT = 7;
  /** RegularExpression Id. */
  int DIGIT = 8;
  /** RegularExpression Id. */
  int COORDINATING_CONJUNCTION = 9;
  /** RegularExpression Id. */
  int CARDINAL = 10;
  /** RegularExpression Id. */
  int DETERMINER = 11;
  /** RegularExpression Id. */
  int EXISTENTIAL_THERE = 12;
  /** RegularExpression Id. */
  int FOREIGN_WORD = 13;
  /** RegularExpression Id. */
  int CONJUNCTION = 14;
  /** RegularExpression Id. */
  int ADJECTIVE = 15;
  /** RegularExpression Id. */
  int ADJECTIVE_COMPARATIVE = 16;
  /** RegularExpression Id. */
  int ADJECTIVE_SUPERLATIVE = 17;
  /** RegularExpression Id. */
  int LIST_ITEM_MARKER = 18;
  /** RegularExpression Id. */
  int VERB_MODAL_AUXILLIARY = 19;
  /** RegularExpression Id. */
  int NOUN_SINGULAR = 20;
  /** RegularExpression Id. */
  int NOUN_PLURAL = 21;
  /** RegularExpression Id. */
  int NOUN_PROPER_SINGULAR = 22;
  /** RegularExpression Id. */
  int NOUN_PROPER_PLURAL = 23;
  /** RegularExpression Id. */
  int PREDETERMINER = 24;
  /** RegularExpression Id. */
  int POSSESSIVE_ENDING = 25;
  /** RegularExpression Id. */
  int PRONOUN_PERSONAL = 26;
  /** RegularExpression Id. */
  int PRONOUN_POSSESSIVE = 27;
  /** RegularExpression Id. */
  int ADVERB = 28;
  /** RegularExpression Id. */
  int ADVERB_COMPARATIVE = 29;
  /** RegularExpression Id. */
  int ADVERB_SUPERLATIVE = 30;
  /** RegularExpression Id. */
  int ADBERB_PARTICIPLE = 31;
  /** RegularExpression Id. */
  int SYMBOL = 32;
  /** RegularExpression Id. */
  int INFINITVAL_TO = 33;
  /** RegularExpression Id. */
  int INTERJECTION = 34;
  /** RegularExpression Id. */
  int VERB_BASE = 35;
  /** RegularExpression Id. */
  int VERB_3RD_PERSON_SINGULAR_PRESENT = 36;
  /** RegularExpression Id. */
  int VERB_PAST_TENSE = 37;
  /** RegularExpression Id. */
  int VERB_PAST_PARTICIPLE = 38;
  /** RegularExpression Id. */
  int VERB_PRESENT_PARTICIPLE = 39;
  /** RegularExpression Id. */
  int WH_DETERMINER = 40;
  /** RegularExpression Id. */
  int WH_PRONOUN_PERSONAL = 41;
  /** RegularExpression Id. */
  int WH_PRONOUN_POSSESSIVE = 42;
  /** RegularExpression Id. */
  int WH_ADVERB = 43;
  /** RegularExpression Id. */
  int PUNCTUATION_MARK_SENTENCE_CLOSER = 44;
  /** RegularExpression Id. */
  int PUNCTUATION_MARK_COMMA = 45;
  /** RegularExpression Id. */
  int PUNCTUATION_MARK_COLON = 46;
  /** RegularExpression Id. */
  int CONTEXTUAL_SEPARATON_LEFT_PAREN = 47;
  /** RegularExpression Id. */
  int CONTEXTUAL_SEPARATON_RIGHT_PAREN = 48;
  /** RegularExpression Id. */
  int PLUS = 49;
  /** RegularExpression Id. */
  int MINUS = 50;
  /** RegularExpression Id. */
  int MULTIPLY = 51;
  /** RegularExpression Id. */
  int DIVIDE = 52;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<WORD>",
    "<NUM>",
    "<CONSTANT>",
    "<DIGIT>",
    "<COORDINATING_CONJUNCTION>",
    "<CARDINAL>",
    "<DETERMINER>",
    "<EXISTENTIAL_THERE>",
    "<FOREIGN_WORD>",
    "<CONJUNCTION>",
    "<ADJECTIVE>",
    "<ADJECTIVE_COMPARATIVE>",
    "<ADJECTIVE_SUPERLATIVE>",
    "<LIST_ITEM_MARKER>",
    "<VERB_MODAL_AUXILLIARY>",
    "<NOUN_SINGULAR>",
    "<NOUN_PLURAL>",
    "<NOUN_PROPER_SINGULAR>",
    "<NOUN_PROPER_PLURAL>",
    "<PREDETERMINER>",
    "<POSSESSIVE_ENDING>",
    "<PRONOUN_PERSONAL>",
    "<PRONOUN_POSSESSIVE>",
    "<ADVERB>",
    "<ADVERB_COMPARATIVE>",
    "<ADVERB_SUPERLATIVE>",
    "<ADBERB_PARTICIPLE>",
    "<SYMBOL>",
    "<INFINITVAL_TO>",
    "<INTERJECTION>",
    "<VERB_BASE>",
    "<VERB_3RD_PERSON_SINGULAR_PRESENT>",
    "<VERB_PAST_TENSE>",
    "<VERB_PAST_PARTICIPLE>",
    "<VERB_PRESENT_PARTICIPLE>",
    "<WH_DETERMINER>",
    "<WH_PRONOUN_PERSONAL>",
    "<WH_PRONOUN_POSSESSIVE>",
    "<WH_ADVERB>",
    "\".\"",
    "\",\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
  };

}
